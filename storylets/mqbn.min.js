window.MQBN=class a{static getStorylets(b,c="storylets",d=!0){const e=[];let f=-Infinity,g=0;for(let h of setup[c].sort(a.prioritySort))if(this.meetsRequirements(h,c)&&(g++,(h.priority??0)>=f&&e.push(h),g==b&&(f=h.priority??0,!d)))break;return temporary()[c+"_available"]=e,e.slice(0,b).sort(a.weightSort)}static prioritySort(c,a){const b=c.priority??0,d=a.priority??0;return b==d?randomFloat(0,1)-.5:b>d?-1:1}static weightSort(c,a){return c.priority&&!a.priority?1:c.weight==a.weight?0:c.weight>a.weight?1:-1}static meetsRequirements(a,b="storylets"){if(!a.sticky&&variables()[b+"_used"].has(a.id?a.id:a.title))return!1;if(a.all)for(const c of a.all)if(!this[c.type+"Requirement"](c,b))return!1;if(a.any){for(const c of a.any)if(this[c.type+"Requirement"](c,b))return!0;return!1}return!0}static anyRequirement(a,b){return this.meetsRequirements(a,b)}static allRequirement(a,b){return this.meetsRequirements(a,b)}static visitedRequirement(a){return"not"==a.op?!visited(a.passage):visited(a.passage)}static varRequirement(a){return this.operators[a.op??"eq"](State.getVar(a.var),a.value)}static sequenceRequirement(a){return a.count?this.operators[a.op??"eq"](State.getVar(a.seq).count,a.count):a.value?this.operators[a.op??"eq"](State.getVar(a.seq).value,a.value):this.operators["not"==a.op?"neq":"eq"](State.getVar(a.seq).name,a.name)}static playedRequirement(a,b){return"not"==a.op?!variables()[b+"_used"].has(a.story):variables()[b+"_used"].has(a.story)}static collectionRequirement(a){const b=State.getVar(a.var);let c;if(b instanceof Set||b instanceof Map)c=b.has(a.has);else if(b instanceof Array)c=b.includes(a.has);else if("Object"==Util.toStringTag(b))c=Object.hasOwn(b,a.has)&&b[a.has];else throw`The variable ${a.var} is not any kind of collection`;return"not"==a.op?!c:c}static functionRequirement(a,b){return a.func(a,b)}static randRequirement(a){let b=this.getRandomInt(1,100);return b<=a.chance}static pullsRequirement(a,b){return this.operators[a.op??"eq"](a.pulls,variables()[b+"_used"].size)}static operators={eq:function(c,a){return c==a},neq:function(c,a){return c!=a},lt:function(c,a){return c<a},gt:function(c,a){return c>a},lte:function(c,a){return c<=a},gte:function(c,a){return c>=a},includes:function(c,a){return Array.isArray(c)&&c.includes(a)},notincludes:function(c,a){return Array.isArray(c)&&!c.includes(a)},has:function(c,a){return(c instanceof Set||c instanceof Map)&&c.has(a)}};static trigger(a){$(document).trigger({type:":storyletchosen",storylet:a})}static getRandomInt(a,b){return Math.random()*(b-a)+a}static played(a,b="storylets"){return this.playedRequirement({story:a},b)}static storyletscan(a="storylets"){const b="storylets"==a?"":` ['"]{0,1}*${a}['"]{0,1}`,c=new RegExp(`<<storylet${b}>>`),d=new RegExp(`<<storylet${b}>>(.*)<<\/storylet>>`,"s"),e=Story.lookupWith(a=>a.text.match(c)),f=[];for(let b of e){const a=b.text.match(d)[1],c=Scripting.evalJavaScript(`(${a.trim()})`);c.title=c.title??b.title,c.passage=b.title,f.push(c)}setup[a]=setup[a]?setup[a].concat(f):f}static storyletsinit(a="storylets"){State.variables[a+"_used"]||State.setVar("$"+a+"_used",new Map),State.variables[a+"_current"]||State.setVar("$"+a+"_current",!1)}static pruneStorylets(a="storylets"){setup[a]=setup[a].filter(b=>!variables()[a+"_used"].has(b.id??b.title))}static createSequence(a,b,c="linear"){setup.MQBNsequences=setup.MQBNsequences||{};let d=0;if("Object"==Util.toStringTag(b)){let a=[],c=!1;for(let e in b)c||(d=e,c=!0),a[e]=b[e];b=a}setup.MQBNsequences[a]={values:b,mode:c};const e=new Sequence(a,b[d],d);State.setVar(a,e)}static sequenceChange(a,b){var c=Math.abs,d=Math.floor;const e=State.getVar(a),f=e.value,g=setup.MQBNsequences[a].values.length;let h;"linear"==setup.MQBNsequences[a].mode?h=Math.max(Math.min(f+b,g-1),0):"cycling"==setup.MQBNsequences[a].mode&&(h=f+b,0<b&&h>g-1?e.count+=d(h/g):0>b&&0>h&&(e.count-=c(d(h/g))),h=c(h%g)),e.name=this.sequenceName(a,h),e.val=h,State.setVar(a,e)}static sequenceName(a,b){let c="";for(let d in setup.MQBNsequences[a].values){if(d>b)return c;c=setup.MQBNsequences[a].values[d]}return c}},window.Sequence=class a{constructor(a,b,c,d=1){this.type=a,this.name=b,this.val=c,this.count=d}toString(){return this.name}[Symbol.toPrimitive](a){return"string"==a?this.name:this.value}set value(a){MQBN.sequenceChange(this.type,a-this.value)}get value(){return this.val}toJSON(){return JSON.reviveWrapper(String.format("new Sequence({0},{1},{2},{3})",JSON.stringify(this.type),JSON.stringify(this.name),JSON.stringify(this.val),JSON.stringify(this.count)))}clone(){return new a(this.type,this.name,this.val,this.count)}},window.macroPairedArgsParser=function(a,b=0){const c={};for(let d=b;d<a.length;d+=2)c[a[d].replace(/[^a-zA-Z0-9_]/g,"")]=a[d+1];return c},Macro.add(["storyletsinit","initstorylets"],{handler:function(){MQBN.storyletsinit(this.args[0])}}),Macro.add(["storyletsprune","prunestorylets"],{handler:function(){MQBN.pruneStorylets(this.args[0])}}),Macro.add("storyletgoto",{handler:function(){if(0===this.args.length)return this.error(`no storylet specified`);const a=macroPairedArgsParser(this.args,1),b=a.store??"storylets",c=a.open??!1;let d;if("object"==typeof this.args[0])d=this.args[0];else{const a=setup[b].filter(a=>a.title==this.args[0]||a.id==this.args[0]);if(c){const c=a.toSorted(MQBN.prioritySort).filter(a=>MQBN.meetsRequirements(a,b));d=!!c.length&&c[0]}else d=a[0]}if(d){const a=d.passage??d.title;variables()[b+"_used"].set(d.id??d.title),variables()[b+"_current"]=d,MQBN.trigger(d),setTimeout(()=>Engine.play(a),Engine.minDomActionDelay)}}}),Macro.add("storyletlink",{tags:null,handler(){if(0===this.args.length)return this.error("no storylet specified");const a=macroPairedArgsParser(this.args,1),b=a.store??"storylets",c=a.behaviour??"hidden",d=this.payload[0].contents.trim(),e=jQuery(document.createElement("a"));let f;if("object"==typeof this.args[0])f=this.args[0];else{temporary()[b+"_available"]||MQBN.getStorylets(0,b);const a=temporary()[b+"_available"].find(a=>a.title==this.args[0]||a.id==this.args[0]);a&&(f=a)}if(f){e.append(document.createTextNode(a.text??f.link??f.title));let c=f.passage??f.title;null!=c&&(e.attr("data-passage",c),Story.has(c)?Config.addVisitedLinkClass&&State.hasPlayed(c)&&e.addClass("link-visited"):e.addClass("link-broken")),e.addClass("macro-storylet-link").addClass("link-internal").ariaClick({namespace:".macros",role:null==c?"button":"link",one:null!=c},this.createShadowWrapper(function(){variables()[b+"_used"].set(f.id??f.title),variables()[b+"_current"]=f,d&&Wikifier.wikifyEval(d)},null==c?null:()=>{MQBN.trigger(f),Engine.play(c)})).appendTo(this.output)}else if("disabled"==c&&"string"==typeof this.args[0])if(f=setup[b].find(a=>a.id==this.args[0]||a.title==this.args[0]),f)jQuery(this.output).wiki(`<span class="link-disabled">${a.disabledtext??f.link??f.title}</span>`);else return this.error(`storylet ${this.args[0]} cannot be found`)}}),Macro.add("storyletuse",{handler:function(){if(0===this.args.length)return this.error(`no storylet specified`);const a=macroPairedArgsParser(this.args,1),b=a.store??"storylets";let c;if("object"==typeof this.args[0])c=this.args[0];else{setup[b].find(a=>a.title==this.args[0]||a.id==this.args[0])}c&&(variables()[b+"_used"].set(c.id??c.title),variables()[b+"_current"]=c)}}),Macro.add("storyletscan",{handler:function(){MQBN.storyletscan(this.args[0])}}),Macro.add("storylet",{handler:function(){}}),Macro.add("sequence",{handler:function(){return 0===this.args.length?this.error("no sequence name specified"):"linear"!=this.args[1]&&"cycling"!=this.args[1]?this.error(`argument 2 must be either linear or cycling, ${this.args[1]} found`):3>this.args.length?this.error("no sequence values specified"):void(Array.isArray(this.args[1])||"Object"==Util.toStringTag(this.args[1])?MQBN.createSequence(this.args[0],this.args[2],this.args[1]):MQBN.createSequence(this.args[0],this.args.slice(2),this.args[1]))}}),Macro.add(["sequenceadvance","sequencerewind"],{handler:function(){if(0===this.args.length)return this.error("no sequence name specified");if(!setup.MQBNsequences)return this.error("you must create a sequence using <<sequence>> before ${this.name == 'sequenceadvance' ? 'advancing' : 'rewinding'} it");if(!setup.MQBNsequences[this.args[0]])return this.error(`sequence ${this.args[0]} has not been defined`);let a=this.args[1]??1;"sequencerewind"==this.name&&(a=-1*a),MQBN.sequenceChange(this.args[0],a)}});